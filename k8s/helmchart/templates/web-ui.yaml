apiVersion: v1
kind: Service
metadata:
  name: web-ui
  labels:
    app: web-ui
#    run: web-ui
spec:
  type: NodePort
  ports:
  - name: http
    protocol: TCP
    port: 9001
    targetPort: 9001
  selector:
    app: web-ui
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: web-ui
spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: web-ui
        version: v1
    {{- if .Values.hostAliases }}
    hostAliases:
{{ toYaml .Values.hostAliases | indent 8 }}
    {{- end }}
    spec:
      volumes:
        - name: app-authservice-configmap-volume # declare the volume containing the authservice ConfigMap
          configMap:
            name: app-authservice-configmap
      containers:
      - name: web-ui
        # NOTE: replace registry `ip:port` with server address
        image: {{ .Values.REGISTRY_IP }}:{{ .Values.REGISTRY_PORT }}/gaeus:web-ui
        imagePullPolicy: Always
        ports:
        - containerPort: 9001
          name: http
          protocol: TCP
      - name: authservice # authservice needs to be deployed in the sample Pod as the productpage
        image: {{ .Values.REGISTRY_IP }}:{{ .Values.REGISTRY_PORT }}/gaeus:authservice # Manually docker pull the latest authservice image from https://github.com/istio-ecosystem/authservice/packages and push it to your own image registry (e.g. Docker Hub), and use it here. (The Github Package Registry does not work with k8s yet until this issue is fixed and released: https://github.com/kubernetes-sigs/kind/issues/870)
        imagePullPolicy: Always
        ports:
          - containerPort: 10003
        volumeMounts:
          - name: app-authservice-configmap-volume # mount the volume containing the authservice ConfigMap
            mountPath: /etc/authservice
