apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: app-gateway
spec:
  selector:
    istio: ingressgateway
  servers:
    - port:
        number: 80
        name: http-80
        protocol: HTTP
#        protocol: HTTP2
      tls:
        httpsRedirect: true
      hosts:
        - "*"
#     - "httpbin.example.com"
    - port:
        number: 443
        name: https-443
        #protocol: GRPC-WEB
        protocol: HTTPS
# see https://istio.io/docs/tasks/traffic-management/ingress/secure-ingress-mount/
      tls:
        mode: SIMPLE
        serverCertificate: /etc/istio/ingressgateway-certs/tls.crt
        privateKey: /etc/istio/ingressgateway-certs/tls.key
      hosts:
      - "*"
#     - "httpbin.example.com"
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: virtual-service
spec:
  hosts:
    - "*"
#   - "httpbin.example.com"
  gateways:
    - app-gateway
  #tcp:
  #tls:
  http:
    - match:
      - headers:
          content-type:
            exact: "application/grpc-web-text"
        uri:
          # NOTE: change to package name and service name from proto file
          prefix: "/helloworld.Greeter"
#        - port: 80
#        - port: 443
#        - uri:
#            # Allow the Authentication Request Callback to get routed to productpage so it can be intercepted by the authservice
#            prefix: /productpage/oauth
#        - uri:
#            # Allow the authservice logout request to get routed to productpage so it can be intercepted by the authservice
#            exact: /authservice_logout
#        - uri:
#            exact: /productpage
#        - uri:
#            prefix: /productpage/oauth # makes sure then Authentication Request Callback gets routed to the productpage
#        - uri:
#            prefix: /static
#        - uri:
#            exact: /login
#        - uri:
#            exact: /logout
#        - uri:
#            prefix: /api/v1/
      route:
        - destination:
#            host: server.default.svc.cluster.local
            host: server
      #timeout: 3s
      #maxGrpcTimeout: 3s
      corsPolicy:
        allowOrigin:
          - "*"
        allowMethods:
          - POST
          - GET
          - OPTIONS
          - PUT
          - DELETE
        allowHeaders:
          - grpc-timeout
          - content-type
          - origin
          - keep-alive
          - user-agent
          - cache-control
          - content-transfer-encoding
          - custom-header-1
          - x-accept-content-transfer-encoding
          - x-accept-response-streaming
          - x-user-agent
          - x-grpc-web
          - x-csrf-token
          - authorization
          - accept
        maxAge: 1728s
        exposeHeaders:
          - custom-header-1
          - grpc-status
          - grpc-message
        allowCredentials: true
#     all others, serve the frontend
    - route:
      - destination:
          host: web-ui
      #timeout: 10s
      #maxGrpcTimeout: 10s
      #websocketUpgrade: true
      corsPolicy:
        allowOrigin:
        - "*" # for webpack-dev-server testing